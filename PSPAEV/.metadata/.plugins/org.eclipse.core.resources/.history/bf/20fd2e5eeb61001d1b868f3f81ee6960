package acts;

import javax.swing.JButton;
import javax.swing.JOptionPane;

public class Procesadora {

	public static void main(String[] args) {

		int num1 = Integer.valueOf(args[0]);
		int num2 = Integer.valueOf(args[1]);
		int num3 = Integer.valueOf(args[2]);
		int num4 = Integer.valueOf(args[3]);
		int total = num1 + num2 + num3 + num4;
//		Croqueta k = new Croqueta(num1, num2, num3, num4);
		int maximoHilo = 0;

		Thread[] hilo1 = new Thread[num1 + 1];
		Thread[] hilo2 = new Thread[num2 + 1];
		Thread[] hilo3 = new Thread[num3 + 1];
		Thread[] hilo4 = new Thread[num4 + 1];
		do {

			try {

				Thread t1 = new Thread();
				// ACCEDEMOS A LA PRIMERA SECUENCIA DE HILOS PARA LAS CROQUETAS
				for (int i = 1; i <= num1; i++) {
					Croqueta k1 = new Croqueta(i, "jamon");
					hilo1[i] = new Thread(k1);
					maximoHilo++;
					hilo1[i].start();
				
				}
				Thread t2 = new Thread();
				// ACCEDEMOS A LA PRIMERA SECUENCIA DE HILOS PARA LAS CROQUETAS
				for (int i = 1; i <= num2; i++) {
					Croqueta k2 = new Croqueta(i, "pollo");

					hilo2[i] = new Thread(k2);
					maximoHilo++;
					hilo2[i].start();

				}
				Thread t3 = new Thread();
				// ACCEDEMOS A LA PRIMERA SECUENCIA DE HILOS PARA LAS CROQUETAS
				for (int i = 1; i <= num3; i++) {
					Croqueta k3 = new Croqueta(i, "bacalao");

					hilo3[i] = new Thread(k3);
					maximoHilo++;
					hilo3[i].start();

				}
				Thread t4 = new Thread();
				// ACCEDEMOS A LA PRIMERA SECUENCIA DE HILOS PARA LAS CROQUETAS
				for (int i = 1; i <= num4; i++) {
					Croqueta k4 = new Croqueta(i, "queso");

					hilo4[i] = new Thread(k4);
					maximoHilo++;
					hilo4[i].start();

				}

			} catch (Exception e) {
				e.printStackTrace();
			}
			if (total>=100) {
				System.out.println("mucho, esperando limite");
				try {
					Thread.sleep(3000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}

		} while (total < 200);
		try {
			Thread.sleep(3000);
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
	
	
	public void comprobarLimite(Thread[] hilo1) {
		if (hilo1.length>=100) {
			Thread.sleep(3000);
		}
	}

}
